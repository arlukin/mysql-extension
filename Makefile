# Make file for foLanguage and unittests.
#
# To build and install foLanguage execute the following.
#
#	make requirements
#	make
#	make install
#
#
# Read more about make files
# --------------------------
#
# http://mrbook.org/tutorials/make/
# http://stackoverflow.com/questions/2374863/makefile-build-directory-and-dependencies-list
# http://www.gnu.org/prep/standards/html_node/Directory-Variables.html
# http://airs.com/ian/configure/configure_2.html
# http://www.gnu.org/software/make/manual/make.html
# http://mrbook.org/tutorials/make/
#
#
# __author__     = "daniel.lindh@cybercow.se"
# __copyright__  = "Copyright 2012, Fareoffice CRS AB"
# __maintainer__ = "Daniel Lindh"
# __version__    = "1.0.0"
# __status__     = "Production"


# Where the plugin is installed.
libexecdir = /usr/lib64/mysql/plugin/

# Where the build/object/executeable/lib files are stored.
BUILDDIR = ./build/

# The output file generated by the make file.
lib = libfolanguage.so
libpath = $(BUILDDIR)$(lib)

# Executeable unit test.
test = $(BUILDDIR)testFoLanguage

# Include pathes where compiler looks for header files and other includes.
INCLUDE = -I./ -I./src/ -I$(BUILDDIR)/UnitTest++/src/ -I/usr/include/mysql/

# All files that should be compiled to generate 'lib'
src = src/fo_debug.cpp \
      src/fo_language.cpp \
      src/fo_string.cpp \
      src/udf.cpp

# All files that should be compiled to generate 'test'
test_src = src/test/test.cpp \
 	src/test/test_string.cpp \
 	src/test/test_data_type_size.cpp \
 	src/test/test_language.cpp

# Compiler flags, and path to different used compile software.
#
CXX = g++
CXXDEBUG = -g
CXXFLAGS ?= $(CXXDEBUG) -Wall -W -ansi -fPIC $(INCLUDE) # -pedantic
LDFLAGS ?= -L$(BUILDDIR)/UnitTest++ -lUnitTest++
SED = sed
MV = mv
RM = rm

#CFLAGS =  -lstdc++

#
objects = $(patsubst src/%.cpp, $(BUILDDIR)%.o, $(src))
test_objects = $(patsubst src/test/%.cpp, $(BUILDDIR)%.o, $(test_src))
dependencies = $(subst .o,.d,$(objects))
test_dependencies = $(subst .o,.d,$(test_objects))

.SUFFIXES: .o .cpp

define make-depend
  $(CXX) $(CXXFLAGS) -M $1 | \
  $(SED) -e 's,\($(notdir $2)\) *:,$(dir $2)\1: ,' > $3.tmp
  $(SED) -e 's/#.*//' \
      -e 's/^[^:]*: *//' \
      -e 's/ *\\$$//' \
      -e '/^$$/ d' \
      -e 's/$$/ :/' $3.tmp >> $3.tmp
  $(MV) $3.tmp $3
endef

#
# Build everything, lib and unittest.
#
all: $(test)

#
# yum packages required to build foLanguage.
#
requirments:
	yum -y install mysql-devel gcc-c++ unzip

#
# Build library
#
$(libpath): $(BUILDDIR)/UnitTest++/libUnitTest++.a $(objects)
	@echo
	@echo Creating $(libpath) library...
	@gcc -shared -Wl,-soname,libfolanguage.so -o $(libpath)  $(objects) -lc
	@echo
	ldconfig -n ./build

#
# Build unit test
#
$(test): $(libpath) $(test_objects)
	@echo
	@echo Linking $(test)...
	@$(CXX) $(test_objects) -o $(test) -L./build -lfolanguage $(LDFLAGS)
	@echo
	echo Running unit tests...
	@LD_LIBRARY_PATH=$(BUILDDIR):$LD_LIBRARY_PATH ./$(test)

	# Look for memory leaks.
	@LD_LIBRARY_PATH=$(BUILDDIR):$LD_LIBRARY_PATH valgrind --tool=memcheck ./$(test)

#
# Compile all cpp files into object files.
#
build/%.o : src/%.cpp
	@echo Compile $<
	@$(call make-depend,$<,$@,$(subst .o,.d,$@))
	@$(CXX) $(CXXFLAGS) -c $< -o $(patsubst src/%.cpp, build/%.o, $<)

build/%.o : src/test/%.cpp
	@echo Compile $<
	@$(call make-depend,$<,$@,$(subst .o,.d,$@))
	@$(CXX) $(CXXFLAGS) -c $< -o $(patsubst src/test/%.cpp, build/%.o, $<)
#
# UnitTest++ - A library used to create unit tests.
#
$(BUILDDIR)/UnitTest++/libUnitTest++.a:
	mkdir -p build
	rm -rf $(BUILDDIR)/UnitTest++
	curl -L -o $(BUILDDIR)unittest-cpp.zip http://downloads.sourceforge.net/sourceforge/unittest-cpp/unittest-cpp-1.4.zip
	unzip -d $(BUILDDIR) $(BUILDDIR)/unittest-cpp.zip
	rm -f $(BUILDDIR)/unittest-cpp.zip
	make -C $(BUILDDIR)UnitTest++

#
# Delete all build files.
#
clean:
	@rm -rf $(BUILDDIR)/UnitTest++
	-@$(RM) $(objects) $(test_objects) $(dependencies) $(test_dependencies) $(test) $(libpath) 2> /dev/null

#
# Install the module into mysql.
#
install:
	# Execute unittests before installing into mysql.
	@LD_LIBRARY_PATH=$(BUILDDIR):$LD_LIBRARY_PATH ./$(test)

	# Installing the .so file.
	service mysqld stop
	cp $(libpath) $(libexecdir)$(lib)
	cp $(libpath) $(libexecdir)$(lib)
	service mysqld start
	chmod 755 $(libexecdir)$(lib)

	# Activate the udf functions in mysql
	mysql -uroot mysql -e 'DROP function IF EXISTS getLanguage;'
	mysql -uroot mysql -e 'DROP function IF EXISTS setLanguage;'
	mysql -uroot mysql -e 'CREATE FUNCTION getLanguage RETURNS STRING SONAME "$(lib)";'
	mysql -uroot mysql -e 'CREATE FUNCTION setLanguage RETURNS STRING SONAME "$(lib)"; '

	# Run unittests using the actual UDF module.
	./test/test.py
